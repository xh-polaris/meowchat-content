// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package provider

import (
	"github.com/xh-polaris/meowchat-content/biz/adaptor"
	"github.com/xh-polaris/meowchat-content/biz/application/service"
	"github.com/xh-polaris/meowchat-content/biz/infrastructure/config"
	"github.com/xh-polaris/meowchat-content/biz/infrastructure/mapper/cat"
	"github.com/xh-polaris/meowchat-content/biz/infrastructure/mapper/image"
	"github.com/xh-polaris/meowchat-content/biz/infrastructure/mapper/moment"
	"github.com/xh-polaris/meowchat-content/biz/infrastructure/mapper/post"
)

// Injectors from wire.go:

func NewContentServerImpl() (*adaptor.ContentServerImpl, error) {
	configConfig, err := config.NewConfig()
	if err != nil {
		return nil, err
	}
	iMongoMapper := cat.NewMongoMapper(configConfig)
	iEsMapper := cat.NewEsMapper(configConfig)
	catService := &service.CatService{
		CatMongoMapper: iMongoMapper,
		CatEsMapper:    iEsMapper,
	}
	imageIMongoMapper := image.NewMongoMapper(configConfig)
	imageService := &service.ImageService{
		ImageModel: imageIMongoMapper,
	}
	momentIMongoMapper := moment.NewMongoMapper(configConfig)
	momentIEsMapper := moment.NewEsMapper(configConfig)
	momentService := &service.MomentService{
		MomentMongoMapper: momentIMongoMapper,
		MomentEsMapper:    momentIEsMapper,
	}
	postIMongoMapper := post.NewMongoMapper(configConfig)
	postIEsMapper := post.NewEsMapper(configConfig)
	postService := &service.PostService{
		PostMongoMapper: postIMongoMapper,
		PostEsMapper:    postIEsMapper,
	}
	contentServerImpl := &adaptor.ContentServerImpl{
		Config:        configConfig,
		CatService:    catService,
		ImageService:  imageService,
		MomentService: momentService,
		PostService:   postService,
	}
	return contentServerImpl, nil
}
